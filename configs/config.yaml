# configs/config.yaml

data:
  coins:
    - ethereum
    - bitcoin
    - litecoin  # Added as per coin_map
    # Add other coins as needed
  days: 1000
  validation_split: 0.10
  test_split: 0.10
  symbol_mapping:
    - symbol: "ETHBTC"
      baseAsset: "ETH"
      quoteAsset: "BTC"
    - symbol: "LTCBTC"
      baseAsset: "LTC"
      quoteAsset: "BTC"
    - symbol: "BNBBTC"
      baseAsset: "BNB"
      quoteAsset: "BTC"
    - symbol: "BTCUSDT"
      baseAsset: "BTC"
      quoteAsset: "USDT"
    - symbol: "ETHUSDT"
      baseAsset: "ETH"
      quoteAsset: "USDT"
    - symbol: "BNBUSDT"
      baseAsset: "BNB"
      quoteAsset: "USDT"
    - symbol: "ADAUSDT"
      baseAsset: "ADA"
      quoteAsset: "USDT"
    - symbol: "SOLUSDT"
      baseAsset: "SOL"
      quoteAsset: "USDT"
    - symbol: "LTCUSDT"
      baseAsset: "LTC"
      quoteAsset: "USDT"
    - symbol: "LITUSDT"
      baseAsset: "LIT"
      quoteAsset: "USDT"
    - symbol: "ETHBNB"
      baseAsset: "ETH"
      quoteAsset: "BNB"
    - symbol: "LTCBNB"
      baseAsset: "LTC"
      quoteAsset: "BNB"
    - symbol: "UNIETH"
      baseAsset: "UNI"
      quoteAsset: "ETH"
    - symbol: "AAVEETH"
      baseAsset: "AAVE"
      quoteAsset: "ETH"
    - symbol: "CAKEUSDT"
      baseAsset: "CAKE"
      quoteAsset: "USDT"
    - symbol: "AXSUSDT"
      baseAsset: "AXS"
      quoteAsset: "USDT"
    - symbol: "SANDUSDT"
      baseAsset: "SAND"
      quoteAsset: "USDT"
    - symbol: "USDCUSDT"
      baseAsset: "USDC"
      quoteAsset: "USDT"
    - symbol: "BUSDUSDT"
      baseAsset: "BUSD"
      quoteAsset: "USDT"
  coin_map:
    bitcoin: "BTC"
    ethereum: "ETH"
    litecoin: "LTC"
    binancecoin: "BNB"
    cardano: "ADA"
    solana: "SOL"
    litentry: "LIT"
    uniswap: "UNI"
    aave: "AAVE"
    pancakeswap: "CAKE"
    axieinfinity: "AXS"
    thesandbox: "SAND"
    usdcoin: "USDC"
    binanceusd: "BUSD"
    # Add other coins as needed

model:
  sequence_length: 50
  prediction_length: 1
  lstm_units: [128]
  dropout_rate: 0.3
  dense_units: [64]
  learning_rate: 0.0003
  clip_norm: 1.0

training:
  batch_size: 64
  epochs: 200
  early_stopping:
    patience: 25
    min_delta: 0.0001

preprocessing:
  scaling:
    feature_scaler_type: "standard"
    target_scaler_type: "robust"

logging:
  name: 'crypto_predictor'
  log_dir: 'logs'
  console_level: 'INFO'
  file_level: 'DEBUG'
  rotation: 'size'
  json_format: false

paths:
  data_dir: data
  raw_data_dir: data/raw/train
  raw_predict_dir: data/raw/predict
  models_dir: models
  logs_dir: logs
  model_logs_dir: /tmp/model_logs
  results_dir: results
  visualization_dir: visualizations
  processed_data_dir: data/processed
  
predictions_output: "results/predictions/predictions.json"
